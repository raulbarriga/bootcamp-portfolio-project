{"version":3,"sources":["assets/images/google-play-badge.png","assets/images/app-store-logo.png","components/Header.js","components/Footer.js","components/Home.js","components/Pagination.js","components/FilterSortBtns.js","components/SearchBox.js","components/Card.js","components/ShowListingsCards.js","components/Listings.js","api/index.js","components/Main.js","App.js","index.js"],"names":["module","exports","Header","Fragment","className","role","id","NavLink","to","type","data-toggle","data-target","aria-expanded","aria-controls","Component","Footer","src","alt","href","PlayStore","AppStore","Link","Home","placeholder","aria-label","icon","faSearch","Pagination","propertiesPerPage","dataLength","currentPage","paginate","pageNumbers","totalPages","Math","ceil","console","log","i","push","map","pageNumber","key","onClick","FilterSortBtns","sortDropdown","sort","filteredData","state","a","b","price","area","rooms","bathrooms","aria-haspopup","style","backgroundColor","borderColor","aria-labelledby","SearchBox","setSearchText","searchText","setCurrentPage","fetchForSale","onSubmit","e","preventDefault","str","split","city","replace","name","value","onChange","target","Card","listing","photo","faBed","beds","faToilet","baths","lot_size","faMapMarkerAlt","address_new","line","state_code","postal_code","prop_status","ShowListingsCards","currentProperties","Listings","BASE_URL","getForSale","options","params","offset","limit","headers","process","axios","get","data","message","Main","useState","listingsData","setListingsData","setDataLength","then","listings","length","catch","err","indexOfLastProperty","indexOfFirstProperty","slice","Switch","Route","path","component","exact","render","Redirect","App","HashRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.adfd5222.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google-play-badge.db9b21a1.png\";","module.exports = __webpack_public_path__ + \"static/media/app-store-logo.436fa48e.png\";","import React, { Component } from 'react';\r\n// import { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     this.toggleNav = this.toggleNav.bind(this);\r\n    //     this.state = {\r\n    //       isNavOpen: false\r\n    //     };\r\n    // }\r\n\r\n    // toggleNav() {\r\n    //     this.setState({\r\n    //         isNavOpen: !this.state.isNavOpen\r\n    //     });\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-custom navbar-dark\" role=\"navigation\">\r\n                        <div id=\"container-fluid-nav\" className=\"container-fluid\">\r\n                        <NavLink to='/bootcamp-portfolio-project/home' className=\"navbar-brand\">LOGO</NavLink>\r\n                        \r\n                        {/* Collapse Button Toggler */}\r\n                        <button\r\n                            className=\"navbar-toggler ml-auto\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#toggle-btn\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"toggle-btn\"\r\n                        >\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div id=\"toggle-btn\" className=\"collapse navbar-collapse\">\r\n                            <ul id=\"nav-css\" className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-white\" to='/bootcamp-portfolio-project/home'>Home</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-white\" to='/bootcamp-portfolio-project/listings'>Listings</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-white\" to='/bootcamp-portfolio-project/aboutus'>About Us</NavLink>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-white\" to='/bootcamp-portfolio-project/login'>Log In</NavLink>\r\n                            </li> */}\r\n                            {/* <li id=\"nav-item-btn\" className=\"nav-item\">\r\n                                <button className=\"btn btn-primary text-white\" onclick=\"window.location.href='register.html'\"><a href=\"register.html\">Register</a></button>\r\n                            </li> */}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    </nav>\r\n                </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PlayStore from '../assets/images/google-play-badge.png';\r\nimport AppStore from '../assets/images/app-store-logo.png';\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"bg-color my-0\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <img\r\n              className=\"phones-img\"\r\n              src=\"https://mockupz.design/assets/images/image18.jpg?v=061d1db9\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-4 store-icons\">\r\n            <h3>Download the Real Estate App</h3>\r\n            <span>\r\n              <a href=\"/\">\r\n                <img\r\n                  className=\"play-store\"\r\n                  src={PlayStore}\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </span>\r\n            <span>\r\n              <a href=\"/\">\r\n                <img className=\"app-store\" src={AppStore} alt=\"\" />\r\n              </a>\r\n            </span>\r\n          </div>\r\n          <div className=\"col-sm-4 footer-links\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <Link to=\"/bootcamp-portfolio-project/home\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/bootcamp-portfolio-project/listings\">Listings</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/bootcamp-portfolio-project/aboutus\">About Us</Link>\r\n              </li>\r\n              {/* <li>\r\n                <Link to=\"/bootcamp-portfolio-project/login\">Log In</Link>\r\n              </li> */}\r\n              {/* <li id=\"nav-item-btn\">\r\n                <button\r\n                  className=\"btn btn-primary text-white\"\r\n                  onClick={window.location.href={'/register'}}\r\n                >\r\n                  <a href=\"/register\">Register</a>\r\n                </button>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Image Banner */}\r\n      <div className=\"row\">\r\n        <div id=\"home-banner\" className=\"col-12 px-0\">\r\n          <div className=\"overlay\">\r\n            <img\r\n              className=\"home-img\"\r\n              src=\"https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/586970/getty-home-with-for-sale-sign.jpg&w=2000&op=resize\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          {/* Search form */}\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 align-items-end\">\r\n              <div className=\"form-group\">\r\n                <div className=\"form-field search-box\">\r\n                  <form>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"search\"\r\n                      placeholder=\"Enter City or Zip Code\"\r\n                      aria-label=\"Search\"\r\n                    />\r\n                    <button type=\"submit\" className=\"btn bg-white\">\r\n                      <FontAwesomeIcon className=\"fas\" icon={faSearch} />\r\n                    </button>\r\n                  </form>\r\n                  {/* onClick={} */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\n\nconst Pagination = ({\n  propertiesPerPage,\n  dataLength,\n  currentPage,\n  paginate,\n}) => {\n  let pageNumbers = [];\n  let totalPages = Math.ceil(dataLength / propertiesPerPage);\n  console.log(\"total pages: \", totalPages);\n\n  for (let i = 1; i <= totalPages; i++) {\n    // this'll give the correct amount of page #'s\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination justify-content-center\">\n        {pageNumbers.map((pageNumber) => (\n          <li\n            key={pageNumber}\n            className={`page-item\n            ${currentPage === pageNumber ? \"active\" : \"\"}`}\n          >\n            <button\n              onClick={() => paginate(pageNumber)}\n              className=\"page-link\"\n            >\n              {pageNumber}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from 'react'\n\n// todo: pass data here\nconst FilterSortBtns = () => {\n\n  const sortDropdown = (sort) => {\n    const { filteredData } = this.state;\n    //Low to high\n    if (sort === \"price-dsc\") {\n      sort = filteredData.sort((a, b) => {\n        return a.price - b.price;\n      });\n    }\n    //High to low\n    if (sort === \"price-asc\") {\n      sort = filteredData.sort((a, b) => {\n        return b.price - a.price;\n      });\n    }\n    //Square feet from high to low\n    if (sort === \"area-asc\") {\n      sort = filteredData.sort((a, b) => {\n        return b.area - a.area;\n      });\n    }\n    //Bedrooms from high to low\n    if (sort === \"beds-asc\") {\n      sort = filteredData.sort((a, b) => {\n        return b.rooms - a.rooms;\n      });\n    }\n    //Bathrooms from high to low\n    if (sort === \"bath-asc\") {\n      sort = filteredData.sort((a, b) => {\n        return b.bathrooms - a.bathrooms;\n      });\n    }\n    // this.setState({\n    //   filteredData: sort,\n    // });\n  };\n\n  return (\n    <div id=\"filter-and-sort-row\" className=\"row\">\n        <div className=\"col-sm-12 d-flex flex-nowrap float-right justify-content-end dropdown\">\n          <button id=\"filter-btn\" className=\"btn order-1 mr-2\" type=\"button\">\n            Filter\n          </button>\n          <div className=\"btn-group\">\n            <button\n              type=\"button\"\n              id=\"sort-btn\"\n              className=\"btn dropdown-toggle order-2\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              style={{\n                backgroundColor: \"#f8f9fa\",\n                borderColor: \"#ced4da\",\n              }}\n            >\n              Sort\n            </button>\n            <div\n              className=\"dropdown-menu dropdown-menu-right\"\n              aria-labelledby=\"sort-btn\"\n            >\n              <button\n                className=\"dropdown-item\"\n                type=\"button\"\n                onClick={() => sortDropdown(\"price-asc\")}\n              >\n                Price (High to Low)\n              </button>\n              <button\n                className=\"dropdown-item\"\n                type=\"button\"\n                onClick={() => sortDropdown(\"price-dsc\")}\n              >\n                Price (Low to High)\n              </button>\n              {/* <button className=\"dropdown-item\" type=\"button\">Newest</button> */}\n              <button\n                className=\"dropdown-item\"\n                type=\"button\"\n                onClick={() => sortDropdown(\"area-asc\")}\n              >\n                Sqaure Feet\n              </button>\n              <button\n                className=\"dropdown-item\"\n                type=\"button\"\n                onClick={() => sortDropdown(\"beds-asc\")}\n              >\n                Bedrooms\n              </button>\n              <button\n                className=\"dropdown-item\"\n                type=\"button\"\n                onClick={() => sortDropdown(\"bath-asc\")}\n              >\n                Bathrooms\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default FilterSortBtns","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SearchBox = ({ \n    setSearchText, \n    searchText, \n    setCurrentPage,\n    fetchForSale\n}) => {\n    // onSubmitHandler \n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    // var lowerCase = e.target.value.toLowerCase();\n    // setSearchText(lowerCase)\n\n    // const str = \"Redwood City, CA\";\n    // fetchForSale(searchText);\n    /* */\n    const str = searchText.split(\",\");\n    const city = str[0];\n    const state = str[1].replace(/\\s/g, \"\");\n    fetchForSale(city, state); //receive(city, state)\n    setCurrentPage(1);\n    console.log(city);\n    console.log(state);\n  };\n  console.log(\"searchText: \", searchText);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12 align-items-end\">\n        <div className=\"form-group\">\n          <div className=\"form-field search-box\">\n            <form onSubmit={onSubmitHandler}>\n              <input\n                type=\"search\"\n                name=\"search\"\n                value={searchText}\n                className=\"form-control\"\n                placeholder=\"Enter City or Zip Code\"\n                onChange={(e) => setSearchText(e.target.value)}\n              />\n              <button type=\"submit\" className=\"btn bg-white\">\n                <FontAwesomeIcon className=\"fas\" icon={faSearch} />\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  faBed,\n  faToilet,\n  faMapMarkerAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Card = ({ listing, id }) => {\n  return (\n    <>\n      <div className=\"card\" key={id}>\n        <Link to={`/bootcamp-portfolio-project/listings/${listing.id}`} className=\"router-link\">\n          <img\n            src={listing.photo}\n            className=\"card-img-top img-fluid\"\n            alt=\"...\"\n          />\n          <div id=\"card-body\" className=\"card-body\">\n            <div className=\"row d-flex justify-content-between\">\n              <div className=\"col-sm-auto\">\n                <h5 className=\"card-title price\">$ {listing.price}</h5>\n              </div>\n              <div className=\"col-sm-auto\">\n                <h6 className=\"card-title details\">\n                  <FontAwesomeIcon className=\"fas\" icon={faBed} />{\" \"}\n                  {listing.beds} bds &#124;{\" \"}\n                  <FontAwesomeIcon className=\"fas\" icon={faToilet} />{\" \"}\n                  {listing.baths} ba &#124; {listing.lot_size} sqft\n                </h6>\n              </div>\n            </div>\n            <span className=\"text-dark\">\n              <strong className=\"card-text\">\n                <FontAwesomeIcon className=\"fas\" icon={faMapMarkerAlt} />{\" \"}\n                <span>{listing.address_new.line},</span>{\" \"}\n                <span>{listing.address_new.city},</span>{\" \"}\n                <span>{listing.address_new.state_code}</span>{\" \"}\n                <span>{listing.address_new.postal_code}</span>\n              </strong>\n            </span>\n          </div>\n          <div className=\"card-footer text-muted\">\n            {listing.prop_status === \"for_sale\" ? \"For Sale\" : \"For Rent\"}\n          </div>\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"./Card\";\n\nconst ShowListingsCards = ({ currentProperties }) => {\n  // if (currentProperties === undefined || currentProperties.length === 0) {\n  //   return \"Sorry did not match any listing.\";\n  // }\n\n  return (\n    <div id=\"card-columns\" className=\"col-md\">\n      <div className=\"row justify-content-center\">\n        {currentProperties.map((listing, id) => (\n          <Card key={id} listing={listing} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ShowListingsCards;\n","import React, { useState } from \"react\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import {\r\n//   faBed,\r\n//   faToilet,\r\n//   faMapMarkerAlt,\r\n// } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { Link } from \"react-router-dom\";\r\n// import $ from \"jquery\";\r\n// import Filter from './ListingsFilterComponent';\r\n// import ListingDetails from \"./ListingDetailsComponent\";\r\nimport ListingsFilter from \"./ListingsFilter\";\r\nimport Pagination from \"./Pagination\";\r\nimport FilterSortBtns from \"./FilterSortBtns\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport ShowListingsCards from \"./ShowListingsCards\";\r\n\r\nconst Listings = ({\r\n  // listingsData,\r\n  currentProperties,\r\n  propertiesPerPage,\r\n  dataLength,\r\n  currentPage,\r\n  paginate,\r\n  fetchForSale,\r\n  setCurrentPage,\r\n  setSearchText,\r\n  searchText\r\n}) => {\r\n  /*\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          filteredData: this.props.listingsData,\r\n          propertyStatus: \"Type\",\r\n          city: \"\",\r\n          houses: false,\r\n          manufactured: false,\r\n          condosCoOps: false,\r\n          multiFamily: false,\r\n          apartments: false,\r\n          lotsLand: false,\r\n          townhomes: false,\r\n          bedrooms: 0,\r\n          bathrooms: 0,\r\n          minPrice: 0,\r\n          maxPrice: 75000000,\r\n          minArea: 0,\r\n          maxArea: 50000,\r\n          search: \"\",\r\n      };\r\n  }\r\n  */\r\n  \r\n  /*\r\n    UNSAFE_componentWillMount = () => {\r\n        //Initial render is by prices from high to low\r\n        var listingsData = this.props.listingsData.sort((a, b) => {\r\n            return b.price - a.price;\r\n        });\r\n\r\n        // Filter Toggle Button\r\n        $(function () {\r\n            $(\"#filter-btn\").click(function () {\r\n                $(\"#filter\").toggle();\r\n            });\r\n        });\r\n\r\n        // Property Type Button Dropdown Remains Open on Checkbox Selection\r\n        $(\".checkbox-menu\").on(\"change\", \"input[type='checkbox']\", function () {\r\n            $(this).closest(\"li\").toggleClass(\"active\", this.checked);\r\n        });\r\n\r\n        $(document).on(\"click\", \".allow-focus\", function (e) {\r\n            e.stopPropagation();\r\n        });\r\n\r\n        this.setState({\r\n            listingsData,\r\n        });\r\n    };\r\n    */\r\n\r\n\r\n    /*\r\n  const handleInputChange = (event) => {\r\n    // console.log(event.target.value)\r\n\r\n    const name = event.target.name;\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n\r\n    this.setState(\r\n      {\r\n        [name]: value,\r\n      },\r\n      () => {\r\n        //console.log(this.state);\r\n        this.filteredData();\r\n      }\r\n    );\r\n  };\r\n  */\r\n/*\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    //Search\r\n    if (this.state.search !== \"\") {\r\n      var newData = this.state.listingsData.filter((item) => {\r\n        var city = item.city.toLowerCase();\r\n        var searchText = this.state.search.toLowerCase();\r\n        var n = city.match(searchText);\r\n\r\n        if (n == null) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      filteredData: newData,\r\n    });\r\n  };\r\n*/\r\n  \r\n\r\n  /*\r\n    componentDidUpdate = () => {\r\n        const { listingsData } = this.props;\r\n\r\n        //after initial page render, if filter options were used & went back to defaults,\r\n        //this'll get the default properties back to render\r\n        if (\r\n            this.state.filteredData === undefined ||\r\n            this.state.filteredData.length === 0\r\n        ) {\r\n            // console.log(\"here\");\r\n            this.setState({\r\n                filteredData: listingsData,\r\n            });\r\n        }\r\n    };\r\n    */\r\n\r\n    /*\r\n  const filteredData = () => {\r\n    const { listingsData } = this.props;\r\n    const {\r\n      minPrice,\r\n      maxPrice,\r\n      minArea,\r\n      maxArea,\r\n      bedrooms,\r\n      bathrooms,\r\n      propertyStatus,\r\n    } = this.state;\r\n    var newData = [];\r\n\r\n    if (\r\n      minPrice !== 0 ||\r\n      maxPrice !== 75000000 ||\r\n      minArea !== 0 ||\r\n      maxArea !== 50000 ||\r\n      bedrooms !== 0 ||\r\n      bathrooms !== 0\r\n    ) {\r\n      var otherFilters = listingsData.filter((item) => {\r\n        return (\r\n          item.price >= minPrice &&\r\n          item.price <= maxPrice &&\r\n          item.area >= minArea &&\r\n          item.area <= maxArea &&\r\n          item.rooms >= bedrooms &&\r\n          item.bathrooms >= bathrooms\r\n        );\r\n      });\r\n      newData = newData.concat(otherFilters);\r\n    }\r\n\r\n    // if (this.state.city !== \"\") {\r\n    //     newData = newData.filter((item) => {\r\n    //         return item.city === this.state.city;\r\n    //     });\r\n    // }\r\n\r\n    // All the following check if newData is empty or not & works\r\n    // Rent or Sale\r\n    if (propertyStatus !== \"Type\") {\r\n      if (newData === undefined || newData.length === 0) {\r\n        if (propertyStatus === \"rent\") {\r\n          newData = listingsData.filter((item) => {\r\n            return item.propertyStatus === \"rent\";\r\n          });\r\n        } else {\r\n          newData = listingsData.filter((item) => {\r\n            return item.propertyStatus === \"sale\";\r\n          });\r\n        }\r\n      }\r\n      if (this.state.propertyStatus === \"sale\") {\r\n        newData = newData.filter((item) => {\r\n          return item.propertyStatus === \"sale\";\r\n        });\r\n      } else {\r\n        newData = newData.filter((item) => {\r\n          return item.propertyStatus === \"rent\";\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.houses !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allHouses = listingsData.filter((item) => {\r\n          return item.homeType === \"house\";\r\n        });\r\n        newData = newData.concat(allHouses);\r\n      }\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"house\";\r\n          });\r\n        }\r\n        //if property type is the first filter used\r\n        allHouses = listingsData.filter((item) => {\r\n          return item.homeType === \"house\";\r\n        });\r\n        newData = newData.concat(allHouses);\r\n      } else {\r\n        allHouses = listingsData.filter((item) => {\r\n          return item.homeType === \"house\";\r\n        });\r\n        newData = newData.concat(allHouses);\r\n      }\r\n      //console.log(\"newData\", newData);\r\n    }\r\n    if (this.state.manufactured !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allManufactured = listingsData.filter((item) => {\r\n          return item.homeType === \"manufactured\";\r\n        });\r\n        newData = newData.concat(allManufactured);\r\n      }\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"manufactured\";\r\n          });\r\n        }\r\n        //if property type is the first filter used\r\n        allManufactured = listingsData.filter((item) => {\r\n          return item.homeType === \"manufactured\";\r\n        });\r\n        newData = newData.concat(allManufactured);\r\n      } else {\r\n        allManufactured = listingsData.filter((item) => {\r\n          return item.homeType === \"manufactured\";\r\n        });\r\n        newData = newData.concat(allManufactured);\r\n      }\r\n      //console.log(\"newdata with concat manufactured\", newData);\r\n    }\r\n    if (this.state.condosCoOps !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allCondosCoOps = listingsData.filter((item) => {\r\n          return item.homeType === \"condo\" || item.homeType === \"coOp\";\r\n        });\r\n        newData = newData.concat(allCondosCoOps);\r\n      }\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"condo\" || item.homeType === \"coOp\";\r\n          });\r\n        }\r\n        allCondosCoOps = listingsData.filter((item) => {\r\n          return item.homeType === \"condo\" || item.homeType === \"coOp\";\r\n        });\r\n        newData = newData.concat(allCondosCoOps);\r\n      } else {\r\n        allCondosCoOps = listingsData.filter((item) => {\r\n          return item.homeType === \"condo\" || item.homeType === \"coOp\";\r\n        });\r\n        newData = newData.concat(allCondosCoOps);\r\n      }\r\n    }\r\n    if (this.state.multiFamily !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allMultiFamily = listingsData.filter((item) => {\r\n          return item.homeType === \"multi-family\";\r\n        });\r\n        newData = newData.concat(allMultiFamily);\r\n      }\r\n\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"multi-family\";\r\n          });\r\n        }\r\n        allMultiFamily = listingsData.filter((item) => {\r\n          return item.homeType === \"multi-family\";\r\n        });\r\n        newData = newData.concat(allMultiFamily);\r\n      } else {\r\n        allMultiFamily = listingsData.filter((item) => {\r\n          return item.homeType === \"multi-family\";\r\n        });\r\n        newData = newData.concat(allMultiFamily);\r\n      }\r\n    }\r\n    if (this.state.apartments !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allApartments = listingsData.filter((item) => {\r\n          return item.homeType === \"apartment\";\r\n        });\r\n        newData = newData.concat(allApartments);\r\n      }\r\n\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"apartment\";\r\n          });\r\n        }\r\n        allApartments = listingsData.filter((item) => {\r\n          return item.homeType === \"apartment\";\r\n        });\r\n        newData = newData.concat(allApartments);\r\n      } else {\r\n        allApartments = listingsData.filter((item) => {\r\n          return item.homeType === \"apartment\";\r\n        });\r\n        newData = newData.concat(allApartments);\r\n      }\r\n    }\r\n    if (this.state.lotsLand !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allLotsLand = listingsData.filter((item) => {\r\n          return item.homeType === \"lot\" || item.homeType === \"land\";\r\n        });\r\n        newData = newData.concat(allLotsLand);\r\n      }\r\n\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"lot\" || item.homeType === \"land\";\r\n          });\r\n        }\r\n        allLotsLand = listingsData.filter((item) => {\r\n          return item.homeType === \"lot\" || item.homeType === \"land\";\r\n        });\r\n        newData = newData.concat(allLotsLand);\r\n      } else {\r\n        allLotsLand = listingsData.filter((item) => {\r\n          return item.homeType === \"lot\" || item.homeType === \"land\";\r\n        });\r\n        newData = newData.concat(allLotsLand);\r\n      }\r\n    }\r\n    if (this.state.townhomes !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allTownhomes = listingsData.filter((item) => {\r\n          return item.homeType === \"townhome\";\r\n        });\r\n        newData = newData.concat(allTownhomes);\r\n      }\r\n\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"townhome\";\r\n          });\r\n        }\r\n        allTownhomes = listingsData.filter((item) => {\r\n          return item.homeType === \"townhome\";\r\n        });\r\n        newData = newData.concat(allTownhomes);\r\n      } else {\r\n        allTownhomes = listingsData.filter((item) => {\r\n          return item.homeType === \"townhome\";\r\n        });\r\n        newData = newData.concat(allTownhomes);\r\n      }\r\n    }\r\n    //console.log(\"after concating, before set\", newData);\r\n    // will remove all duplicate items automatically with set\r\n    //convert newData array to set\r\n    newData = new Set(newData);\r\n    // convert back to array now that all duplicates are removed\r\n    newData = [...newData];\r\n\r\n    this.setState(\r\n      {\r\n        filteredData: newData,\r\n      },\r\n      () => {\r\n        //console.log(this.state.filteredData);\r\n        //console.log(newData);\r\n      }\r\n    );\r\n  };\r\n  */\r\n\r\n  /*\r\n  const ShowProperties = () => {\r\n    const { filteredData } = this.state;\r\n\r\n    if (filteredData === undefined || filteredData.length === 0) {\r\n      return \"Sorry your filter did not match any listing.\";\r\n    }\r\n\r\n    var initialView = filteredData.map((listing, id) => {\r\n      return (\r\n        <div className=\"card\" key={id}>\r\n          <Link to={`/bootcamp-portfolio-project/listings/${listing.id}`} className=\"router-link\">\r\n            <img\r\n              src={listing.image}\r\n              className=\"card-img-top img-fluid\"\r\n              alt=\"...\"\r\n            />\r\n            <div id=\"card-body\" className=\"card-body\">\r\n              <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-sm-auto\">\r\n                  <h5 className=\"card-title price\">\r\n                    $ {listing.price.toLocaleString(\"en\")}\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-sm-auto\">\r\n                  <h6 className=\"card-title details\">\r\n                    <FontAwesomeIcon className=\"fas\" icon={faBed} />{\" \"}\r\n                    {listing.rooms} bds &#124;{\" \"}\r\n                    <FontAwesomeIcon className=\"fas\" icon={faToilet} />{\" \"}\r\n                    {listing.bathrooms} ba &#124;{\" \"}\r\n                    {listing.area.toLocaleString(\"en\")} sqft\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <span className=\"text-dark\">\r\n                <strong className=\"card-text\">\r\n                  <FontAwesomeIcon className=\"fas\" icon={faMapMarkerAlt} />{\" \"}\r\n                  <span>{listing.address}</span> <span>{listing.city}</span>{\" \"}\r\n                  <span>{listing.state}</span> <span>{listing.zipCode}</span>\r\n                </strong>\r\n              </span>\r\n            </div>\r\n            <div className=\"card-footer text-muted\">\r\n              For {listing.propertyStatus}\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return initialView;\r\n  };\r\n  */\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Location search box */}\r\n      <SearchBox \r\n      setSearchText={setSearchText}\r\n      searchText={searchText}\r\n      setCurrentPage={setCurrentPage}\r\n      fetchForSale={fetchForSale}\r\n      // onSubmitHandler={onSubmitHandler}\r\n      />\r\n\r\n      {/* Filter & Sort Toggle Buttons/Row */}\r\n      <FilterSortBtns />\r\n\r\n      {/* Filter row/Toggle Menu/Row */}\r\n      <div className=\"row\">\r\n        {/* todo: pass data here & replace data values */}\r\n        {/* <ListingsFilter /> */}\r\n        {/* Property Listings */}\r\n        {/* <div id=\"card-columns\" className=\"col-md\"> */}\r\n          {/* <div className=\"row\"> */}\r\n            {currentProperties && <ShowListingsCards currentProperties={currentProperties} />}\r\n          {/* </div> */}\r\n        {/* </div> */}\r\n      </div>\r\n        <Pagination \r\n        propertiesPerPage={propertiesPerPage}\r\n        dataLength={dataLength}\r\n        currentPage={currentPage}\r\n        paginate={paginate} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Listings;\r\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://realty-in-us.p.rapidapi.com/\";\n// for autocomplete suggestions, pass city, state \nexport const getForSale = async (city, state) => {\n  const url = BASE_URL + \"properties/list-for-sale\";\n  const options = {\n    //   method: \"GET\",\n    //   url: url,\n    params: {\n      state_code: state,\n      city: city,\n      offset: \"0\",\n      limit: \"200\",\n      sort: \"relevance\",\n    },\n    headers: {\n      \"X-RapidAPI-Host\": \"realty-in-us.p.rapidapi.com\",\n      \"X-RapidAPI-Key\": process.env.REACT_APP_REALTY_API_KEY,\n    },\n  };\n\n  try {\n    const { data } = await axios.get(url, options);\n    // console.log(data);\n    // console.log(response.data);\n\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const inputAutoComplete = async (input) => {\n  const url = BASE_URL + \"locations/auto-complete\";\n  const options = {\n    params: {\n      input: input,\n    },\n    headers: {\n      \"X-RapidAPI-Host\": \"realty-in-us.p.rapidapi.com\",\n      \"X-RapidAPI-Key\": process.env.REACT_APP_REALTY_API_KEY,\n    },\n  };\n  \n  try {\n    const { data } = await axios.get(url, options);\n    console.log(\"input: \", data);\n    // console.log(response.data);\n\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import React, { useState } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport Listings from \"./Listings\";\r\n// import listingsData from \"../Data/listingsData\";\r\n// import ListingDetails from \"./ListingDetailsComponent\";\r\n/* import Contact from './ContactComponent';*/\r\n/* import About from './AboutComponent'; */\r\nimport { getForSale, inputAutoComplete } from \"../api/index\";\r\n\r\nconst Main = () => {\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {\r\n  //         listingsData,\r\n  //     };\r\n  // }\r\n  const [listingsData, setListingsData] = useState([]);\r\n  //   const [propertiesForSale, setPropertiesForSale] = useState([]);\r\n  const [dataLength, setDataLength] = useState(0);\r\n  const [propertiesPerPage, setPropertiesPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const fetchForSale = (city, state) => {\r\n    getForSale(city, state)\r\n      .then((data) => {\r\n        setListingsData(data.listings);\r\n        setDataLength(data.listings.length);\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  };\r\n  \r\n  // console.log(\"Inside listings view, is listingsData: \", listingsData);\r\n\r\n  // get current properties\r\n  const indexOfLastProperty = currentPage * propertiesPerPage;\r\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\r\n  const currentProperties = listingsData.slice(\r\n    indexOfFirstProperty,\r\n    indexOfLastProperty\r\n  );\r\n\r\n  // change pagination page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  /*\r\n  const SinglePropertyInfo = ({ match }) => {\r\n    console.log(match.params);\r\n\r\n    return (\r\n      <ListingDetails\r\n        data={\r\n          this.state.listingsData.filter(\r\n            (listing) => listing.id === +match.params.listingId\r\n          )[0]\r\n        }\r\n      />\r\n    );\r\n  };\r\n*/\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <Header />\r\n      <div className=\"content-wrap\">\r\n        <Switch>\r\n          <Route path=\"/bootcamp-portfolio-project/home\" component={Home} />\r\n          <Route\r\n            exact\r\n            path=\"/bootcamp-portfolio-project/listings\"\r\n            render={() => (\r\n              <Listings\r\n                // listingsData={listingsData}\r\n                currentProperties={currentProperties}\r\n                propertiesPerPage={propertiesPerPage}\r\n                dataLength={dataLength}\r\n                currentPage={currentPage}\r\n                paginate={paginate}\r\n                fetchForSale={fetchForSale}\r\n                setCurrentPage={setCurrentPage}\r\n                searchText={searchText}\r\n                setSearchText={setSearchText}\r\n              />\r\n            )}\r\n          />\r\n          {/* <Route exact path='/directory' render={() => <Directory campsites={this.state.campsites} />} />\r\n                        <Route exact path='/contactus' component={Contact} />\r\n                        <Route exact path='/aboutus' render={() => <About partners={this.state.partners} />} /> */}\r\n          {/* <Route path=\"/listings/:listingId\" component={SinglePropertyInfo} /> */}\r\n          <Redirect to=\"/bootcamp-portfolio-project/home\" />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport Main from './components/Main';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <Main />\n            </div>\n        </HashRouter>\n    );\n}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"photoswipe/dist/photoswipe.css\";\nimport \"photoswipe/dist/default-skin/default-skin.css\";\nimport \"jquery/dist/jquery.min.js\";\n//import \"theia-sticky-sidebar/dist/ResizeSensor.min.js\";\n//import \"theia-sticky-sidebar/dist/theia-sticky-sidebar.min.js\";\nimport \"font-awesome/css/font-awesome.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}