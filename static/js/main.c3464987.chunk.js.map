{"version":3,"sources":["assets/images/google-play-badge.png","assets/images/app-store-logo.png","components/Header.js","components/Footer.js","hooks/useClickOutside.js","components/AutoCompleteMenu.js","components/SearchBox.js","components/Home.js","components/Pagination.js","components/FilterSortBtns.js","components/Card.js","components/ShowListingsCards.js","components/Listings.js","api/index.js","components/Main.js","App.js","index.js"],"names":["module","exports","Header","Fragment","className","role","id","to","type","data-toggle","data-target","aria-expanded","aria-controls","Component","Footer","src","alt","href","PlayStore","AppStore","useClickOutside","handler","domNode","useRef","useEffect","refHandler","e","current","contains","target","document","addEventListener","removeEventListener","AutoCompleteMenu","autocompResults","autocompleteLimit","searchText","fetchForSale","setShowAutoCMenu","history","useLocation","ref","slice","map","obj","key","onClick","preventDefault","city","state_code","line","postal_code","withRouter","setSearchText","fetchAutoCompleteSearch","showAutoCMenu","timeOutId","setTimeout","clearTimeout","onSubmit","str","split","state","replace","name","value","placeholder","onChange","aria-label","icon","faTimes","faSearch","Home","Pagination","propertiesPerPage","dataLength","currentPage","paginate","topOfCardsRef","pageNumbers","totalPages","Math","ceil","i","push","pageNumber","window","scrollTo","top","offsetTop","left","behavior","handleScroll","FilterSortBtns","currentCityNState","currentProperties","aria-haspopup","style","backgroundColor","borderColor","aria-labelledby","undefined","length","Card","listing","photo","price","faBed","beds","faToilet","baths","lot_size","faMapMarkerAlt","address_new","prop_status","ShowListingsCards","BASE_URL","getForSale","a","sort","console","log","url","options","params","offset","limit","headers","process","axios","get","data","message","inputAutoComplete","input","location","useState","listingsData","setListingsData","setDataLength","setCurrentPage","setAutocompResults","setCurrentCityNState","listings","pathname","useCallback","then","autocomplete","catch","err","indexOfLastProperty","indexOfFirstProperty","path","render","exact","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c3464987.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google-play-badge.db9b21a1.png\";","module.exports = __webpack_public_path__ + \"static/media/app-store-logo.436fa48e.png\";","import React, { Component } from 'react';\r\n// import { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     this.toggleNav = this.toggleNav.bind(this);\r\n    //     this.state = {\r\n    //       isNavOpen: false\r\n    //     };\r\n    // }\r\n\r\n    // toggleNav() {\r\n    //     this.setState({\r\n    //         isNavOpen: !this.state.isNavOpen\r\n    //     });\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-custom navbar-dark\" role=\"navigation\">\r\n                        <div id=\"container-fluid-nav\" className=\"container-fluid\">\r\n                        <NavLink to='/bootcamp-portfolio-project/home' className=\"navbar-brand\">LOGO</NavLink>\r\n                        \r\n                        {/* Collapse Button Toggler */}\r\n                        <button\r\n                            className=\"navbar-toggler ml-auto\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#toggle-btn\"\r\n                            aria-expanded=\"false\"\r\n                            aria-controls=\"toggle-btn\"\r\n                        >\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div id=\"toggle-btn\" className=\"collapse navbar-collapse\">\r\n                            <ul id=\"nav-css\" className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-white\" to='/bootcamp-portfolio-project/home'>Home</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-white\" to='/bootcamp-portfolio-project/listings'>Listings</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-white\" to='/bootcamp-portfolio-project/aboutus'>About Us</NavLink>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link text-white\" to='/bootcamp-portfolio-project/login'>Log In</NavLink>\r\n                            </li> */}\r\n                            {/* <li id=\"nav-item-btn\" className=\"nav-item\">\r\n                                <button className=\"btn btn-primary text-white\" onclick=\"window.location.href='register.html'\"><a href=\"register.html\">Register</a></button>\r\n                            </li> */}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    </nav>\r\n                </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PlayStore from '../assets/images/google-play-badge.png';\r\nimport AppStore from '../assets/images/app-store-logo.png';\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"bg-color my-0\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n            <img\r\n              className=\"phones-img\"\r\n              src=\"https://mockupz.design/assets/images/image18.jpg?v=061d1db9\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-4 store-icons\">\r\n            <h3>Download the Real Estate App</h3>\r\n            <span>\r\n              <a href=\"/\">\r\n                <img\r\n                  className=\"play-store\"\r\n                  src={PlayStore}\r\n                  alt=\"\"\r\n                />\r\n              </a>\r\n            </span>\r\n            <span>\r\n              <a href=\"/\">\r\n                <img className=\"app-store\" src={AppStore} alt=\"\" />\r\n              </a>\r\n            </span>\r\n          </div>\r\n          <div className=\"col-sm-4 footer-links\">\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <Link to=\"/bootcamp-portfolio-project/home\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/bootcamp-portfolio-project/listings\">Listings</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/bootcamp-portfolio-project/aboutus\">About Us</Link>\r\n              </li>\r\n              {/* <li>\r\n                <Link to=\"/bootcamp-portfolio-project/login\">Log In</Link>\r\n              </li> */}\r\n              {/* <li id=\"nav-item-btn\">\r\n                <button\r\n                  className=\"btn btn-primary text-white\"\r\n                  onClick={window.location.href={'/register'}}\r\n                >\r\n                  <a href=\"/register\">Register</a>\r\n                </button>\r\n              </li> */}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useRef } from \"react\";\n\n// from https://www.youtube.com/watch?v=eWO1b6EoCnQ&t=330s\nconst useClickOutside = (handler) => {\n  let domNode = useRef();\n\n  useEffect(() => {\n    let refHandler = (e) => {\n      if (!domNode.current.contains(e.target)) {\n        handler();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", refHandler);\n    return () => {\n      document.removeEventListener(\"mousedown\", refHandler);\n    };\n  });\n  return domNode;\n};\n\nexport default useClickOutside;\n","import React from \"react\";\nimport useClickOutside from \"../hooks/useClickOutside\";\nimport {Link, useLocation} from 'react-router-dom'\n\nconst AutoCompleteMenu = ({ autocompResults, autocompleteLimit, searchText, fetchForSale,setShowAutoCMenu, history\n}) => {\n  const location = useLocation();\n  const autoComArr = [\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n    {\n      line: \"3609 Florida Rd\",\n      city: \"Baltimore\",\n      state_code: \"MD\",\n      postal_code: \"21244\",\n    },\n  ];\n\n  let domNode = useClickOutside(() => setShowAutoCMenu(false))\n\n  return (\n    <div ref={domNode} className=\"autocomplete-menu\">\n      <div className=\"menu-arrow\"></div>\n      {searchText && autocompResults.slice(0, autocompleteLimit).map((obj, key) => (\n        <Link key={key} onClick={(e) => {\n          e.preventDefault();\n          fetchForSale(obj.city, obj.state_code)\n          // this'll be true since we're on it\n            setShowAutoCMenu(false);\n          }} \n          // to={`${location.pathname !== \"/bootcamp-portfolio-project/listings\" ? \"/bootcamp-portfolio-project/listings\" : null}`\n          to={\"/bootcamp-portfolio-project/listings\"}\n          className=\"autoComLink\"\n          >\n          <b>\n            {obj.line}{obj.line ? \", \": null}{obj.city}, {obj.state_code}{obj.postal_code ? \", \" : null }{obj.postal_code}\n          </b>\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default AutoCompleteMenu;\n","import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport AutoCompleteMenu from \"./AutoCompleteMenu\";\n\nconst SearchBox = ({\n  setSearchText,\n  searchText,\n  fetchForSale,\n  fetchAutoCompleteSearch,\n  autocompResults,\n  autocompleteLimit,\n  showAutoCMenu,\n  setShowAutoCMenu\n}) => {\n  // onSubmitHandler\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    // var lowerCase = e.target.value.toLowerCase();\n    // setSearchText(lowerCase)\n\n    // const str = \"Redwood City, CA\";\n    // fetchForSale(searchText);\n    /* */\n    // if (!e.target.value) return;\n\n    const str = searchText.split(\",\");\n    const city = str[0];\n    const state = str[1].replace(/\\s/g, \"\");\n    fetchForSale(city, state); //receive(city, state)\n\n    // console.log(city);\n    // console.log(state);\n  };\n\n  const resetSearchText = () => {\n    setSearchText(\"\");\n  };\n \n  // from https://stackoverflow.com/a/62601621/13463953\n  // it created an infinite loop when I passed a function to the dependency array, but useCallback resolved it where I implement fetchAutoCompleteSearch() in Main.js\n  useEffect(() => {\n    const timeOutId = setTimeout(() => fetchAutoCompleteSearch(searchText), 500);\n    return () => clearTimeout(timeOutId);\n  }, [searchText, fetchAutoCompleteSearch])\n\n  return (\n    <div id=\"searchBox\" className=\"row\">\n      <div className=\"col-md-12 align-items-end\">\n        <div className=\"form-group\">\n          <div className=\"form-field search-box\">\n            <form onSubmit={onSubmitHandler}>\n              <input\n                type=\"search\"\n                name=\"search\"\n                value={searchText}\n                className=\"form-control border-0\"\n                placeholder=\"Enter City or Zip Code\"\n                onChange={(e) => setSearchText(e.target.value)}\n              />\n              <div\n                id=\"btn-group-parent\"\n                className=\"btn-toolbar\"\n                role=\"toolbar\"\n                aria-label=\"Toolbar with button groups\"\n              >\n                <div\n                  className=\"btn-group\"\n                  role=\"group\"\n                  aria-label=\"Basic example\"\n                >\n                  {searchText !== \"\" && (\n                    <button\n                      type=\"reset\"\n                      onClick={resetSearchText}\n                      className=\"btn bg-white position-relative\"\n                    >\n                      <FontAwesomeIcon className=\"fas\" icon={faTimes} />\n                    </button>\n                  )}\n                  <button\n                    type=\"submit\"\n                    className=\"btn bg-white position-relative\"\n                  >\n                    <FontAwesomeIcon className=\"fas\" icon={faSearch} /> Search\n                  </button>\n                </div>\n              </div>\n            </form>\n            {showAutoCMenu && searchText && autocompResults && (\n              <AutoCompleteMenu\n                autocompResults={autocompResults}\n                autocompleteLimit={autocompleteLimit}\n                searchText={searchText}\n                fetchForSale={fetchForSale}\n                setShowAutoCMenu={setShowAutoCMenu}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(SearchBox);\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Home = ({\r\n  setSearchText,\r\n  searchText,\r\n  fetchForSale,\r\n  fetchAutoCompleteSearch,\r\n  autocompResults,\r\n  autocompleteLimit,\r\n  showAutoCMenu,\r\n  setShowAutoCMenu\r\n}) => {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Image Banner */}\r\n      <div className=\"row\">\r\n        <div id=\"home-banner\" className=\"col-12 px-0\">\r\n          <div className=\"overlay\">\r\n            <img\r\n              className=\"home-img\"\r\n              src=\"https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/586970/getty-home-with-for-sale-sign.jpg&w=2000&op=resize\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          {/* Search form */}\r\n          <SearchBox\r\n          showAutoCMenu={showAutoCMenu}\r\n          setShowAutoCMenu={setShowAutoCMenu}\r\n            setSearchText={setSearchText}\r\n            searchText={searchText}\r\n            fetchForSale={fetchForSale}\r\n            fetchAutoCompleteSearch={fetchAutoCompleteSearch}\r\n            autocompResults={autocompResults}\r\n            autocompleteLimit={autocompleteLimit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Pagination = ({\n  propertiesPerPage,\n  dataLength,\n  currentPage,\n  paginate,\n  topOfCardsRef\n}) => {\n  let pageNumbers = [];\n  let totalPages = Math.ceil(dataLength / propertiesPerPage);\n\n  for (let i = 1; i <= totalPages; i++) {\n    // this'll give the correct amount of page #'s\n    pageNumbers.push(i);\n  }\n\n  const handleScroll = (ref, e) => {\n    // scroll to an element guide:\n    // https://lo-victoria.com/a-look-at-react-hooks-useref-to-scroll-to-an-element#heading-step-4-add-useref-in-app\n    e.preventDefault();\n    window.scrollTo({\n      top: ref.offsetTop,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  return (\n    <nav>\n      <ul className=\"pagination justify-content-center\">\n        {pageNumbers.map((pageNumber) => (\n          <li\n            key={pageNumber}\n            className={`page-item\n            ${currentPage === pageNumber ? \"active\" : \"\"}`}\n          >\n            <Link\n              to={\"/#App\"}\n              onClick={(e) => {\n                handleScroll(topOfCardsRef.current, e);\n                paginate(pageNumber);\n              }}\n              className=\"page-link\"\n            >\n              {pageNumber}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst FilterSortBtns = ({\n  fetchForSale,\n  currentCityNState,\n  currentProperties,\n}) => {\n  return (\n    <div id=\"filter-and-sort-row\" className=\"row\">\n      <div className=\"col-sm-12 d-flex flex-nowrap float-right justify-content-end dropdown\">\n        <button id=\"filter-btn\" className=\"btn order-1 mr-2\" type=\"button\">\n          Filter\n        </button>\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            id=\"sort-btn\"\n            className=\"btn dropdown-toggle order-2\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            style={{\n              backgroundColor: \"#f8f9fa\",\n              borderColor: \"#ced4da\",\n            }}\n          >\n            Sort\n          </button>\n          <div\n            className=\"dropdown-menu dropdown-menu-right\"\n            aria-labelledby=\"sort-btn\"\n          >\n            <button\n              className=\"dropdown-item\"\n              type=\"button\"\n              onClick={() => {\n                if (\n                  currentProperties === undefined ||\n                  currentProperties.length === 0\n                ) {\n                  return;\n                } else {\n                  fetchForSale(\n                    currentCityNState[0],\n                    currentCityNState[1],\n                    \"relevance\"\n                  );\n                }\n              }}\n            >\n              Relevance\n            </button>\n            <button\n              className=\"dropdown-item\"\n              type=\"button\"\n              onClick={() => {\n                if (\n                  currentProperties === undefined ||\n                  currentProperties.length === 0\n                ) {\n                  return;\n                } else {\n                  fetchForSale(\n                    currentCityNState[0],\n                    currentCityNState[1],\n                    \"price_high\"\n                  );\n                }\n              }}\n            >\n              Price (High to Low)\n            </button>\n            <button\n              className=\"dropdown-item\"\n              type=\"button\"\n              onClick={() => {\n                if (\n                  currentProperties === undefined ||\n                  currentProperties.length === 0\n                ) {\n                  return;\n                } else {\n                  fetchForSale(\n                    currentCityNState[0],\n                    currentCityNState[1],\n                    \"price_low\"\n                  );\n                }\n              }}\n            >\n              Price (Low to High)\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterSortBtns;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  faBed,\n  faToilet,\n  faMapMarkerAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Card = ({ listing, id }) => {\n  return (\n    <>\n      <div className=\"card\" key={id}>\n        <Link \n        to={`/bootcamp-portfolio-project/listings`} className=\"router-link\">\n          <img\n            src={listing.photo}\n            className=\"card-img-top img-fluid\"\n            alt=\"...\"\n          />\n          <div id=\"card-body\" className=\"card-body\">\n            <div className=\"row d-flex justify-content-between\">\n              <div className=\"col-sm-auto\">\n                <h5 className=\"card-title price\">{listing.price}</h5>\n              </div>\n              <div className=\"col-sm-auto\">\n                <h6 className=\"card-title details\">\n                  <FontAwesomeIcon className=\"fas\" icon={faBed} />{\" \"}\n                  {listing.beds} bds &#124;{\" \"}\n                  <FontAwesomeIcon className=\"fas\" icon={faToilet} />{\" \"}\n                  {listing.baths} ba &#124; {listing.lot_size}\n                </h6>\n              </div>\n            </div>\n            <span className=\"text-dark\">\n              <strong className=\"card-text\">\n                <FontAwesomeIcon className=\"fas\" icon={faMapMarkerAlt} />{\" \"}\n                <span>{listing.address_new.line},</span>{\" \"}\n                <span>{listing.address_new.city},</span>{\" \"}\n                <span>{listing.address_new.state_code}</span>{\" \"}\n                <span>{listing.address_new.postal_code}</span>\n              </strong>\n            </span>\n          </div>\n          <div className=\"card-footer text-muted\">\n            {listing.prop_status === \"for_sale\" ? \"For Sale\" : \"For Rent\"}\n          </div>\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"./Card\";\n\nconst ShowListingsCards = ({ currentProperties }) => {\n  // if (currentProperties === undefined || currentProperties.length === 0) {\n  //   return \"Sorry did not match any listing.\";\n  // }\n\n  return (\n    <div id=\"card-columns\" className=\"col-md\">\n      <div className=\"row justify-content-center\">\n        {currentProperties.map((listing, id) => (\n          <Card key={id} listing={listing} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ShowListingsCards;\n","import React, { useState } from \"react\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import {\r\n//   faBed,\r\n//   faToilet,\r\n//   faMapMarkerAlt,\r\n// } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n// import $ from \"jquery\";\r\n// import Filter from './ListingsFilterComponent';\r\n// import ListingDetails from \"./ListingDetailsComponent\";\r\nimport ListingsFilter from \"./ListingsFilter\";\r\nimport Pagination from \"./Pagination\";\r\nimport FilterSortBtns from \"./FilterSortBtns\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport ShowListingsCards from \"./ShowListingsCards\";\r\n\r\nconst Listings = ({\r\n  topOfCardsRef,\r\n  currentProperties,\r\n  propertiesPerPage,\r\n  dataLength,\r\n  currentPage,\r\n  paginate,\r\n  fetchForSale,\r\n  setSearchText,\r\n  searchText,\r\n  fetchAutoCompleteSearch,\r\n  autocompResults,\r\n  autocompleteLimit,\r\n  showAutoCMenu,\r\n  setShowAutoCMenu,\r\n  currentCityNState\r\n}) => {\r\n  /*\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          filteredData: this.props.listingsData,\r\n          propertyStatus: \"Type\",\r\n          city: \"\",\r\n          houses: false,\r\n          manufactured: false,\r\n          condosCoOps: false,\r\n          multiFamily: false,\r\n          apartments: false,\r\n          lotsLand: false,\r\n          townhomes: false,\r\n          bedrooms: 0,\r\n          bathrooms: 0,\r\n          minPrice: 0,\r\n          maxPrice: 75000000,\r\n          minArea: 0,\r\n          maxArea: 50000,\r\n          search: \"\",\r\n      };\r\n  }\r\n  */\r\n\r\n  /*\r\n    UNSAFE_componentWillMount = () => {\r\n        //Initial render is by prices from high to low\r\n        var listingsData = this.props.listingsData.sort((a, b) => {\r\n            return b.price - a.price;\r\n        });\r\n\r\n        // Filter Toggle Button\r\n        $(function () {\r\n            $(\"#filter-btn\").click(function () {\r\n                $(\"#filter\").toggle();\r\n            });\r\n        });\r\n\r\n        // Property Type Button Dropdown Remains Open on Checkbox Selection\r\n        $(\".checkbox-menu\").on(\"change\", \"input[type='checkbox']\", function () {\r\n            $(this).closest(\"li\").toggleClass(\"active\", this.checked);\r\n        });\r\n\r\n        $(document).on(\"click\", \".allow-focus\", function (e) {\r\n            e.stopPropagation();\r\n        });\r\n\r\n        this.setState({\r\n            listingsData,\r\n        });\r\n    };\r\n    */\r\n\r\n  /*\r\n  const handleInputChange = (event) => {\r\n    // console.log(event.target.value)\r\n\r\n    const name = event.target.name;\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n\r\n    this.setState(\r\n      {\r\n        [name]: value,\r\n      },\r\n      () => {\r\n        //console.log(this.state);\r\n        this.filteredData();\r\n      }\r\n    );\r\n  };\r\n  */\r\n  /*\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    //Search\r\n    if (this.state.search !== \"\") {\r\n      var newData = this.state.listingsData.filter((item) => {\r\n        var city = item.city.toLowerCase();\r\n        var searchText = this.state.search.toLowerCase();\r\n        var n = city.match(searchText);\r\n\r\n        if (n == null) {\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      filteredData: newData,\r\n    });\r\n  };\r\n*/\r\n\r\n  /*\r\n    componentDidUpdate = () => {\r\n        const { listingsData } = this.props;\r\n\r\n        //after initial page render, if filter options were used & went back to defaults,\r\n        //this'll get the default properties back to render\r\n        if (\r\n            this.state.filteredData === undefined ||\r\n            this.state.filteredData.length === 0\r\n        ) {\r\n            // console.log(\"here\");\r\n            this.setState({\r\n                filteredData: listingsData,\r\n            });\r\n        }\r\n    };\r\n    */\r\n\r\n  /*\r\n  const filteredData = () => {\r\n    const { listingsData } = this.props;\r\n    const {\r\n      minPrice,\r\n      maxPrice,\r\n      minArea,\r\n      maxArea,\r\n      bedrooms,\r\n      bathrooms,\r\n      propertyStatus,\r\n    } = this.state;\r\n    var newData = [];\r\n\r\n    if (\r\n      minPrice !== 0 ||\r\n      maxPrice !== 75000000 ||\r\n      minArea !== 0 ||\r\n      maxArea !== 50000 ||\r\n      bedrooms !== 0 ||\r\n      bathrooms !== 0\r\n    ) {\r\n      var otherFilters = listingsData.filter((item) => {\r\n        return (\r\n          item.price >= minPrice &&\r\n          item.price <= maxPrice &&\r\n          item.area >= minArea &&\r\n          item.area <= maxArea &&\r\n          item.rooms >= bedrooms &&\r\n          item.bathrooms >= bathrooms\r\n        );\r\n      });\r\n      newData = newData.concat(otherFilters);\r\n    }\r\n\r\n    // if (this.state.city !== \"\") {\r\n    //     newData = newData.filter((item) => {\r\n    //         return item.city === this.state.city;\r\n    //     });\r\n    // }\r\n\r\n    // All the following check if newData is empty or not & works\r\n    // Rent or Sale\r\n    if (propertyStatus !== \"Type\") {\r\n      if (newData === undefined || newData.length === 0) {\r\n        if (propertyStatus === \"rent\") {\r\n          newData = listingsData.filter((item) => {\r\n            return item.propertyStatus === \"rent\";\r\n          });\r\n        } else {\r\n          newData = listingsData.filter((item) => {\r\n            return item.propertyStatus === \"sale\";\r\n          });\r\n        }\r\n      }\r\n      if (this.state.propertyStatus === \"sale\") {\r\n        newData = newData.filter((item) => {\r\n          return item.propertyStatus === \"sale\";\r\n        });\r\n      } else {\r\n        newData = newData.filter((item) => {\r\n          return item.propertyStatus === \"rent\";\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.houses !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allHouses = listingsData.filter((item) => {\r\n          return item.homeType === \"house\";\r\n        });\r\n        newData = newData.concat(allHouses);\r\n      }\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"house\";\r\n          });\r\n        }\r\n        //if property type is the first filter used\r\n        allHouses = listingsData.filter((item) => {\r\n          return item.homeType === \"house\";\r\n        });\r\n        newData = newData.concat(allHouses);\r\n      } else {\r\n        allHouses = listingsData.filter((item) => {\r\n          return item.homeType === \"house\";\r\n        });\r\n        newData = newData.concat(allHouses);\r\n      }\r\n      //console.log(\"newData\", newData);\r\n    }\r\n    if (this.state.manufactured !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allManufactured = listingsData.filter((item) => {\r\n          return item.homeType === \"manufactured\";\r\n        });\r\n        newData = newData.concat(allManufactured);\r\n      }\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"manufactured\";\r\n          });\r\n        }\r\n        //if property type is the first filter used\r\n        allManufactured = listingsData.filter((item) => {\r\n          return item.homeType === \"manufactured\";\r\n        });\r\n        newData = newData.concat(allManufactured);\r\n      } else {\r\n        allManufactured = listingsData.filter((item) => {\r\n          return item.homeType === \"manufactured\";\r\n        });\r\n        newData = newData.concat(allManufactured);\r\n      }\r\n      //console.log(\"newdata with concat manufactured\", newData);\r\n    }\r\n    if (this.state.condosCoOps !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allCondosCoOps = listingsData.filter((item) => {\r\n          return item.homeType === \"condo\" || item.homeType === \"coOp\";\r\n        });\r\n        newData = newData.concat(allCondosCoOps);\r\n      }\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"condo\" || item.homeType === \"coOp\";\r\n          });\r\n        }\r\n        allCondosCoOps = listingsData.filter((item) => {\r\n          return item.homeType === \"condo\" || item.homeType === \"coOp\";\r\n        });\r\n        newData = newData.concat(allCondosCoOps);\r\n      } else {\r\n        allCondosCoOps = listingsData.filter((item) => {\r\n          return item.homeType === \"condo\" || item.homeType === \"coOp\";\r\n        });\r\n        newData = newData.concat(allCondosCoOps);\r\n      }\r\n    }\r\n    if (this.state.multiFamily !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allMultiFamily = listingsData.filter((item) => {\r\n          return item.homeType === \"multi-family\";\r\n        });\r\n        newData = newData.concat(allMultiFamily);\r\n      }\r\n\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"multi-family\";\r\n          });\r\n        }\r\n        allMultiFamily = listingsData.filter((item) => {\r\n          return item.homeType === \"multi-family\";\r\n        });\r\n        newData = newData.concat(allMultiFamily);\r\n      } else {\r\n        allMultiFamily = listingsData.filter((item) => {\r\n          return item.homeType === \"multi-family\";\r\n        });\r\n        newData = newData.concat(allMultiFamily);\r\n      }\r\n    }\r\n    if (this.state.apartments !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allApartments = listingsData.filter((item) => {\r\n          return item.homeType === \"apartment\";\r\n        });\r\n        newData = newData.concat(allApartments);\r\n      }\r\n\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"apartment\";\r\n          });\r\n        }\r\n        allApartments = listingsData.filter((item) => {\r\n          return item.homeType === \"apartment\";\r\n        });\r\n        newData = newData.concat(allApartments);\r\n      } else {\r\n        allApartments = listingsData.filter((item) => {\r\n          return item.homeType === \"apartment\";\r\n        });\r\n        newData = newData.concat(allApartments);\r\n      }\r\n    }\r\n    if (this.state.lotsLand !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allLotsLand = listingsData.filter((item) => {\r\n          return item.homeType === \"lot\" || item.homeType === \"land\";\r\n        });\r\n        newData = newData.concat(allLotsLand);\r\n      }\r\n\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"lot\" || item.homeType === \"land\";\r\n          });\r\n        }\r\n        allLotsLand = listingsData.filter((item) => {\r\n          return item.homeType === \"lot\" || item.homeType === \"land\";\r\n        });\r\n        newData = newData.concat(allLotsLand);\r\n      } else {\r\n        allLotsLand = listingsData.filter((item) => {\r\n          return item.homeType === \"lot\" || item.homeType === \"land\";\r\n        });\r\n        newData = newData.concat(allLotsLand);\r\n      }\r\n    }\r\n    if (this.state.townhomes !== false) {\r\n      if (newData === undefined || newData.length === 0) {\r\n        var allTownhomes = listingsData.filter((item) => {\r\n          return item.homeType === \"townhome\";\r\n        });\r\n        newData = newData.concat(allTownhomes);\r\n      }\r\n\r\n      //if newData has something (it's not empty)\r\n      if (newData !== undefined || newData.length !== 0) {\r\n        //this is for when I use another filter first\r\n        if (\r\n          minPrice !== 0 ||\r\n          maxPrice !== 75000000 ||\r\n          minArea !== 0 ||\r\n          maxArea !== 50000 ||\r\n          bedrooms !== 0 ||\r\n          bathrooms !== 0\r\n        ) {\r\n          newData = newData.filter((item) => {\r\n            return item.homeType === \"townhome\";\r\n          });\r\n        }\r\n        allTownhomes = listingsData.filter((item) => {\r\n          return item.homeType === \"townhome\";\r\n        });\r\n        newData = newData.concat(allTownhomes);\r\n      } else {\r\n        allTownhomes = listingsData.filter((item) => {\r\n          return item.homeType === \"townhome\";\r\n        });\r\n        newData = newData.concat(allTownhomes);\r\n      }\r\n    }\r\n    //console.log(\"after concating, before set\", newData);\r\n    // will remove all duplicate items automatically with set\r\n    //convert newData array to set\r\n    newData = new Set(newData);\r\n    // convert back to array now that all duplicates are removed\r\n    newData = [...newData];\r\n\r\n    this.setState(\r\n      {\r\n        filteredData: newData,\r\n      },\r\n      () => {\r\n        //console.log(this.state.filteredData);\r\n        //console.log(newData);\r\n      }\r\n    );\r\n  };\r\n  */\r\n\r\n  /*\r\n  const ShowProperties = () => {\r\n    const { filteredData } = this.state;\r\n\r\n    if (filteredData === undefined || filteredData.length === 0) {\r\n      return \"Sorry your filter did not match any listing.\";\r\n    }\r\n\r\n    var initialView = filteredData.map((listing, id) => {\r\n      return (\r\n        <div className=\"card\" key={id}>\r\n          <Link to={`/bootcamp-portfolio-project/listings/${listing.id}`} className=\"router-link\">\r\n            <img\r\n              src={listing.image}\r\n              className=\"card-img-top img-fluid\"\r\n              alt=\"...\"\r\n            />\r\n            <div id=\"card-body\" className=\"card-body\">\r\n              <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-sm-auto\">\r\n                  <h5 className=\"card-title price\">\r\n                    $ {listing.price.toLocaleString(\"en\")}\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-sm-auto\">\r\n                  <h6 className=\"card-title details\">\r\n                    <FontAwesomeIcon className=\"fas\" icon={faBed} />{\" \"}\r\n                    {listing.rooms} bds &#124;{\" \"}\r\n                    <FontAwesomeIcon className=\"fas\" icon={faToilet} />{\" \"}\r\n                    {listing.bathrooms} ba &#124;{\" \"}\r\n                    {listing.area.toLocaleString(\"en\")} sqft\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              <span className=\"text-dark\">\r\n                <strong className=\"card-text\">\r\n                  <FontAwesomeIcon className=\"fas\" icon={faMapMarkerAlt} />{\" \"}\r\n                  <span>{listing.address}</span> <span>{listing.city}</span>{\" \"}\r\n                  <span>{listing.state}</span> <span>{listing.zipCode}</span>\r\n                </strong>\r\n              </span>\r\n            </div>\r\n            <div className=\"card-footer text-muted\">\r\n              For {listing.propertyStatus}\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return initialView;\r\n  };\r\n  */\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Location search box */}\r\n      <SearchBox\r\n      showAutoCMenu={showAutoCMenu}\r\n      setShowAutoCMenu={setShowAutoCMenu}\r\n        setSearchText={setSearchText}\r\n        searchText={searchText}\r\n        fetchForSale={fetchForSale}\r\n        fetchAutoCompleteSearch={fetchAutoCompleteSearch}\r\n        autocompResults={autocompResults}\r\n        autocompleteLimit={autocompleteLimit}\r\n        \r\n      />\r\n\r\n      {/* Filter & Sort Toggle Buttons/Row */}\r\n      <FilterSortBtns\r\n      fetchForSale={fetchForSale}\r\n      currentCityNState={currentCityNState}\r\n      currentProperties={currentProperties}\r\n      />\r\n\r\n      {/* Filter row/Toggle Menu/Row */}\r\n      <div className=\"row\">\r\n        {/* todo: pass data here & replace data values */}\r\n        {/* <ListingsFilter /> */}\r\n        {/* Property Listings */}\r\n        {currentProperties && (\r\n          <ShowListingsCards currentProperties={currentProperties} />\r\n        )}\r\n      </div>\r\n      <Pagination\r\n        topOfCardsRef={topOfCardsRef}\r\n        propertiesPerPage={propertiesPerPage}\r\n        dataLength={dataLength}\r\n        currentPage={currentPage}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Listings);\r\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://realty-in-us.p.rapidapi.com/\";\n\nexport const getForSale = async (city, state, sort = \"relevance\") => {\n  console.log(\"index file: \", city+ \", \" + state + \", sort: \" + sort);\n  const url = BASE_URL + \"properties/list-for-sale\";\n  const options = {\n    params: {\n      state_code: state,\n      city: city,\n      offset: \"0\",\n      limit: \"200\",\n      sort: sort,\n    },\n    headers: {\n      \"X-RapidAPI-Host\": \"realty-in-us.p.rapidapi.com\",\n      \"X-RapidAPI-Key\": process.env.REACT_APP_REALTY_API_KEY_2,\n    },\n  };\n\n  try {\n    const { data } = await axios.get(url, options);\n    console.log(\"api index file data: \", data);\n    // console.log(response.data);\n\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n// for autocomplete suggestions, pass city, state \nexport const inputAutoComplete = async (input) => {\n  const url = BASE_URL + \"locations/auto-complete\";\n  const options = {\n    params: {\n      input: input,\n    },\n    headers: {\n      \"X-RapidAPI-Host\": \"realty-in-us.p.rapidapi.com\",\n      \"X-RapidAPI-Key\": process.env.REACT_APP_REALTY_API_KEY_2,\n    },\n  };\n  \n  try {\n    const { data } = await axios.get(url, options);\n    // console.log(\"input: \", data.autocomplete);\n    // console.log(response.data);\n\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};","import React, { useState, useRef, useCallback } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Home from \"./Home\";\r\nimport Listings from \"./Listings\";\r\nimport { withRouter, useLocation } from \"react-router\";\r\nimport { getForSale, inputAutoComplete } from \"../api/index\";\r\n\r\nconst Main = ({ history }) => {\r\n  let location = useLocation();\r\n  const [listingsData, setListingsData] = useState([]);\r\n  const [dataLength, setDataLength] = useState(0);\r\n  const [propertiesPerPage, setPropertiesPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  // for autocomplete search data results\r\n  const [autocompResults, setAutocompResults] = useState([]);\r\n  const [autocompleteLimit, setAutocompleteLimit] = useState(10);\r\n\r\n  // click outside for autcomplete menu\r\n  const [showAutoCMenu, setShowAutoCMenu] = useState(false);\r\n  // for sort button fetch data (need current city & state)\r\n  const [currentCityNState, setCurrentCityNState] = useState([]);\r\n\r\n  const fetchForSale = async (city, state, sort) => {\r\n    try {\r\n      const data = await getForSale(city, state, sort);\r\n      setListingsData(data.listings);\r\n      setDataLength(data.listings.length);\r\n      setCurrentPage(1);\r\n      if (data) {\r\n        console.log(\"main file data: \", data.listings[5].address_new.city + \", \" +  data.listings[5].address_new.state_code);\r\n        setCurrentCityNState([data.listings[5].address_new.city, data.listings[5].address_new.state_code])\r\n        \r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n    if (location.pathname !== \"/bootcamp-portfolio-project/listings\") {\r\n      history.push(\"/bootcamp-portfolio-project/listings\");\r\n    } else {\r\n      return;\r\n    }\r\n    \r\n  };\r\n  console.log(\"main file currentCityNState: \",currentCityNState);\r\n  \r\n\r\n  const fetchAutoCompleteSearch = useCallback((input) => {\r\n    inputAutoComplete(input)\r\n      .then((data) => {\r\n        setAutocompResults(data.autocomplete);\r\n        setShowAutoCMenu(true);\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  }, []);\r\n\r\n  const topOfCardsRef = useRef(null);\r\n\r\n  // get current properties\r\n  const indexOfLastProperty = currentPage * propertiesPerPage;\r\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\r\n  const currentProperties = listingsData.slice(\r\n    indexOfFirstProperty,\r\n    indexOfLastProperty\r\n  );\r\n\r\n  // change pagination page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div ref={topOfCardsRef} className=\"main-container\">\r\n      <Header />\r\n      <div className=\"content-wrap\">\r\n        <Switch>\r\n          <Route\r\n            path=\"/bootcamp-portfolio-project/home\"\r\n            render={() => (\r\n              <Home\r\n                setSearchText={setSearchText}\r\n                searchText={searchText}\r\n                fetchForSale={fetchForSale}\r\n                fetchAutoCompleteSearch={fetchAutoCompleteSearch}\r\n                autocompResults={autocompResults}\r\n                autocompleteLimit={autocompleteLimit}\r\n                showAutoCMenu={showAutoCMenu}\r\n                setShowAutoCMenu={setShowAutoCMenu}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/bootcamp-portfolio-project/listings\"\r\n            render={() => (\r\n              <Listings\r\n              currentCityNState={currentCityNState}\r\n                showAutoCMenu={showAutoCMenu}\r\n                setShowAutoCMenu={setShowAutoCMenu}\r\n                topOfCardsRef={topOfCardsRef}\r\n                currentProperties={currentProperties}\r\n                propertiesPerPage={propertiesPerPage}\r\n                dataLength={dataLength}\r\n                currentPage={currentPage}\r\n                paginate={paginate}\r\n                fetchForSale={fetchForSale}\r\n                searchText={searchText}\r\n                setSearchText={setSearchText}\r\n                fetchAutoCompleteSearch={fetchAutoCompleteSearch}\r\n                autocompResults={autocompResults}\r\n                autocompleteLimit={autocompleteLimit}\r\n              />\r\n            )}\r\n          />\r\n          <Redirect to=\"/bootcamp-portfolio-project/home\" />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Main);\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div id=\"App\" className=\"App\">\n        <Main />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"photoswipe/dist/photoswipe.css\";\nimport \"photoswipe/dist/default-skin/default-skin.css\";\nimport \"jquery/dist/jquery.min.js\";\n//import \"theia-sticky-sidebar/dist/ResizeSensor.min.js\";\n//import \"theia-sticky-sidebar/dist/theia-sticky-sidebar.min.js\";\nimport \"font-awesome/css/font-awesome.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}